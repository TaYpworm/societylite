#!/usr/bin/perl

# This is a script to run ncs with myrinet on cortex.  Creates machine file for
# specified number of processes, prepends current directory to program name 
# and input file name, and adds "-d PWD" to command-line args, since the myrinet
# environment sets the current working directory to the user's home directory.

require 5.002;
use strict;
use Cwd;

my ($i, $n, $nargs, $flag, $arg, $np, $file, $cmd, $rc, $home, $cwd, 
    $machfile, $nsleep, $usefile, @machines);

$home = $ENV{"HOME"};
$cwd  = cwd();
print ("CWD = ", $cwd, "\n");

$np     = $ARGV [0];
$file   = $ARGV [1];
$nsleep = $ARGV [2];

$machfile = $home . "/mach.mpi";
print ("Machine file = ", $machfile, "\n");
$usefile  = "mach.tmp";

#$cmd = "ssh-agent /opt/mpich/myrinet/gnu/bin/mpirun -machinefile " . $usefile;
$cmd = "/opt/mpich/myrinet/gnu/bin/mpirun -np " . $np . " -machinefile " . $usefile;

$cmd = $cmd . " " . $cwd . "/ncs5p";
$cmd = $cmd . " " . $cwd . "/" . $file;
$cmd = $cmd . " -d " . $cwd;
if ($nsleep > 0)
{
  $cmd = $cmd . " -s " . $nsleep;
}

open (INPUT,  "<$machfile");
@machines = <INPUT>;
close (INPUT);
chomp (@machines);


open (OUTPUT, ">$usefile");
select (OUTPUT);

$n = 0;
for ($i = 0; $i < $np; $i++)
{
  print (@machines [$n], "\n");
  $n++;
  if ($n >= $#machines)
  {
    $n = 0;
  }
}

close (OUTPUT);

select (STDOUT);

print ("Final command is '", $cmd, "'\n");
$rc = system ($cmd);
